Menu
════════════════════════════════════════════════════════════════════════
const MENU_NEW_GAME = 0
const MENU_OPTIONS = 1
const MENU_HELP = 2
const MENU_CREDITS = 3
const MENU_ITEMS = ["New Game", "Options", "Help", "Credits"]

const MENU_ITEM_TEXT_ARGS = {font:font, color:#f, x_align:"left"}
const MENU_CURSOR_TEXT_ARGS = {font:font, text:replace("(a)", gamepad_array[0].prompt), x_align:"right", color:#f}

def enter_cutscene_mode(data):
    set_mode(Cutscene, data.level_index) because "Choose New Game from menu"
def enter_options_mode(data):
    set_mode(Options) because "Choose Options from menu"
def enter_help_mode(data):
    set_mode(Help) because "Choose Help from menu"
def enter_credits_mode(data):
    set_mode(Credits) because "Choose Credits from menu"

let current_menu_item = MENU_NEW_GAME
let disable_input = false

enter
────────────────────────────────────────────────────────────────────────
current_menu_item = MENU_NEW_GAME
disable_input = false

bgm_load_audio_latency_frames()
debug_print("loaded latency frames: " + AUDIO_LATENCY_FRAMES)

if not bgm_is_playing():
    let loops = [
        {sound:bgm_menu_sound, loop:true, volume:100%},
        {sound:bgm_in_game_intro_sound, loop:true, volume:0%},
        {sound:bgm_claps_sound, loop:true, volume:0%},
        ]
    bgm_start(loops)

frame
────────────────────────────────────────────────────────────────────────
bgm_update()
if not disable_input:
    for pad in gamepad_array: // any connected control can operate the menus
        // Handle cursor movement
        if pad.yy ≠ 0:
            play_sound(SND_CURSOR_MOVE)
            current_menu_item = (current_menu_item + size(MENU_ITEMS) + pad.yy) % size(MENU_ITEMS)
        
        // Handle menu selection
        if pad.aa ≠ 0:
            if current_menu_item == MENU_NEW_GAME:
                disable_input = true
                play_sound(SND_CURSOR_ACCEPT)
                player_infos = [
                    {gamepad: gamepad_array[0], sprite_sheet: skunk_sprite},
                ]
                add_frame_hook(fade_out, enter_cutscene_mode, 30, ∅, {level_index:0})
            else if current_menu_item == MENU_OPTIONS:
                disable_input = true
                play_sound(SND_CURSOR_ACCEPT)
                add_frame_hook(fade_out, enter_options_mode, 30, ∅, {})
            else if current_menu_item == MENU_HELP:
                play_sound(SND_CURSOR_ACCEPT)
                add_frame_hook(fade_out, enter_help_mode, 30, nil, {})
            else if current_menu_item == MENU_CREDITS:
                play_sound(SND_CURSOR_ACCEPT)
                add_frame_hook(fade_out, enter_credits_mode, 30, nil, {})

// Draw splash screen
const title_pos = xy(50% SCREEN_SIZE.x, 25% SCREEN_SIZE.y)
draw_text({font:font, x_align:"center", pos:title_pos,
    color:#ff0, text:"Toxic Skunks"})
const title_offsets = [xy(1,0),xy(1,1),xy(0,1),xy(-1,1),xy(-1,0),xy(-1,-1),xy(0,-1),xy(1,-1)]
draw_text({font:font, x_align:"center", pos:title_pos + array_value(title_offsets, mode_frames/3, "loop"),
    color:#840, text:"Toxic Skunks", z:-1})

let menu_offset = xy(45% SCREEN_SIZE.x, 50% SCREEN_SIZE.y)
for menu_item at i in MENU_ITEMS:
    draw_text({text:menu_item, pos:menu_offset, ...MENU_ITEM_TEXT_ARGS})
    if current_menu_item == i:
        draw_text({pos:menu_offset - xy(10,0), ...MENU_CURSOR_TEXT_ARGS})
    menu_offset.y += font.line_height

leave
────────────────────────────────────────────────────────────────────────
reset_post_effects()
remove_frame_hooks_by_mode(get_mode())
